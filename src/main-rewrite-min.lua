local a={}local b={supports={video=false,keyboard=false,internet=false,network=false,tmpfs=false},bootable=false}local c=component.list("screen")()local d=component.list("gpu")()if not c and not d then b.supports.video=false;return end;if c and d then component.invoke(d,"bind",c)b.supports.video=true end;function sleep(e)computer.pullSignal(os.clock()+(e or 1))end;local f={data={x=1,y=1}}do local g=component.proxy(d)f.clearScreen=function()local h,i=g.getResolution()g.fill(1,1,h,i,"")end;f.print=function(...)local h,i=g.getResolution()local j=table.concat({...},"")or""local k=string.len(j)for l=1,k,1 do local m=string.sub(j,l,l)g.set(f["data"]["x"],f["data"]["y"],string.sub(j,l,l))f["data"]["x"]=f["data"]["x"]+1;do if f["data"]["y"]>i then f.clearScreen()f["data"]["x"]=1;f["data"]["y"]=1 end end end end;f.println=function(...)f.print(...)f["data"]["y"]=f["data"]["y"]+1;f["data"]["x"]=1;sleep()end end;function readFile(n,o,p,q)local r=""local s=nil;local handle;if p then handle=o else handle=component.invoke(n,"open",o)end;repeat s=component.invoke(n,"read",handle,math.huge)r=r..(s or"")until not s;if q then return true,load(r,"=init")else return true,r end end;function attemptBootFromDevice(n)assert(n,"NO BOOT ADDR GIVEN")local t=component.invoke(n,"exists","/init.lua")if not t then return nil end;local _,u=readFile(n,"/init.lua",false,true)component.invoke(n,"close",handle)return u end;function findAllBootableDevices()local v={}for n,_ in component.list("filesystem")do local w=component.invoke(n,"exists","/init.lua")if w then table.insert(v,n)end end;return v end;function standardBoot()f.println("Booting into operating system...")local x=findAllBootableDevices()if#x==0 then assert(nil,"NO BOOTABLE DEVICES FOUND!")end;local y=attemptBootFromDevice(assert(x[1],"No boot address found!"))computer.getBootAddress=function()return x[1]end;y()end;local z=function()end;do local A=f.clearScreen;local B=f.print;local C=f.println;local function D(options)local E,F;repeat _,E=getKeysPressedMin(a.keyboards,options)if#E>0 then F=E end until F;return F end;local function G(...)local H={...}local I={}local J={}local K=true;local L=true;if#H==0 then return nil elseif#H==1 then J=H[1]elseif#H==2 then K=false;I=H[1]J=H[2]elseif#H==3 then K=false;I=H[1]J=H[2]L=H[3]end;for M,j in pairs(options)do if K then table.insert(I,assert(M,"No index!"))end;C(options[M],". ",j)end;local F=D(I)if L then return J[F]or nil else return F or nil end end;local function N()A()local O={boot_selector_menu,boot_settings_menu,run_network_recovery,exit_efi}local F=G({"Select boot device","Edit boot settings","Network recovery mode","Continue normal boot"})f.println("Loading selection!")O[tonumber(F)]()end;local function boot_selector_menu()A()f.println("Getting bootable devices...")local P=findAllBootableDevices()A()local Q=G(P)local R=P[Q]local S=attemptBootFromDevice(R)if S~=nil then f.println("Booting target system...")S()else f.println("Unable to boot to selected device!")f.println("Shutting down!")computer.shutdown()return end end;local function boot_settings_menu()A()f.println("Boot settings menu is not currently implemented!")f.println("System will shutdown in five seconds!")computer.shutdown()end;local function exit_efi()f.println("Exiting EFI system...")standardBoot()end;z=function()f.println("Launching EFI menu...")N()end end;do local function T(U,V)local W=os.clock()local X=W+U;local Y=false;repeat local Z=V(W)if Z then Y=true end;W=os.clock()until W>=X or Y end;f.clearScreen()f.println("EggCracker version 1.0.0 booting!")f.println("Waiting for 5 seconds...")local a0=os.clock()sleep(3)computer.beep(1000,0.2)computer.beep(1000,0.2)computer.beep(1000,0.2)f.println("Press shift within the next 5 seconds to open menu!")local a1=false;if b.supports.keyboard then local a2,_,_,_=computer.pullSignal()if a2=="key_down"then a1=true;return true end end;if a1 then computer.beep(1000,0.2)f.println("Interrupt detected! Attempting to start EFI menu...")z()else f.println("Running normal boot operations...")sleep(5)standardBoot()end end
